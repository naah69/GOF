运用共享技术有效地支持大量细粒度的对象

亨元模式可以避免大量非常相似类的开销。
在程序设计中，有时需要生成大量细粒度的类实例来表示数据。
如果能发现这些实例除了几个参数外基本上都是相同的，有时就能够受大幅度地减少需要实例化的类的数量。
如果能把那些参数一道类实例的外面，在方法调用时将他们传递进来，就可以通过共享大幅度地减少单个实例的数目

亨元模式执行时所需的状态是有内部的也可能有外部的，、
内部状态存储于具体的亨元实现类对象之中
外部状态则应该考虑由客户端对象存储或计算，当调用亨元对象的操作时，将该状态传递给它


如果一个应用程序使用了大量的对象，
而大量的这些对象造成了很大的存储开销时就应该考虑使用；

还有就是对象的大多数状态可以外部状态，
如果删除对象的外部状态，
那么可以用相对较少的共享对象取代很多组对象，


此时可以考虑使用亨元模式
